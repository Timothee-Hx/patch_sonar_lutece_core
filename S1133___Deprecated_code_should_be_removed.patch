Subject: [PATCH] S1133 : Deprecated code should be removed
---
Index: src/java/fr/paris/lutece/portal/business/rbac/AdminRole.java
===================================================================
diff --git a/src/java/fr/paris/lutece/portal/business/rbac/AdminRole.java b/src/java/fr/paris/lutece/portal/business/rbac/AdminRole.java
deleted file mode 100644
--- a/src/java/fr/paris/lutece/portal/business/rbac/AdminRole.java	(revision 0075118c98bfd8c26c48da57f24861137cf0e7ed)
+++ /dev/null	(revision 0075118c98bfd8c26c48da57f24861137cf0e7ed)
@@ -1,45 +0,0 @@
-/*
- * Copyright (c) 2002-2022, City of Paris
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *  1. Redistributions of source code must retain the above copyright notice
- *     and the following disclaimer.
- *
- *  2. Redistributions in binary form must reproduce the above copyright notice
- *     and the following disclaimer in the documentation and/or other materials
- *     provided with the distribution.
- *
- *  3. Neither the name of 'Mairie de Paris' nor 'Lutece' nor the names of its
- *     contributors may be used to endorse or promote products derived from
- *     this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- *
- * License 1.0
- */
-package fr.paris.lutece.portal.business.rbac;
-
-/**
- * Admin Role
- * 
- * @deprecated Since 7.0 replaced by RBACRole
- */
-@Deprecated
-public class AdminRole extends RBACRole
-{
-
-}
Index: src/java/fr/paris/lutece/portal/business/user/AdminUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/fr/paris/lutece/portal/business/user/AdminUser.java b/src/java/fr/paris/lutece/portal/business/user/AdminUser.java
--- a/src/java/fr/paris/lutece/portal/business/user/AdminUser.java	(revision 0075118c98bfd8c26c48da57f24861137cf0e7ed)
+++ b/src/java/fr/paris/lutece/portal/business/user/AdminUser.java	(revision 0bbd5378cb7f625320d3269db8b90210d2224a27)
@@ -368,18 +368,6 @@
         _accountMaxValidDate = accountMaxValidDate;
     }
 
-    /**
-     * Returns user's roles
-     * 
-     * @deprecated use getRBACRoles( )
-     * @return Returns user's roles
-     */
-    @Deprecated
-    public Map<String, UserRole> getRoles( )
-    {
-        return _roles;
-    }
-
     /**
      * {@inheritDoc }
      */
Index: src/java/fr/paris/lutece/portal/service/rbac/RBACService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/fr/paris/lutece/portal/service/rbac/RBACService.java b/src/java/fr/paris/lutece/portal/service/rbac/RBACService.java
--- a/src/java/fr/paris/lutece/portal/service/rbac/RBACService.java	(revision 0075118c98bfd8c26c48da57f24861137cf0e7ed)
+++ b/src/java/fr/paris/lutece/portal/service/rbac/RBACService.java	(revision 0bbd5378cb7f625320d3269db8b90210d2224a27)
@@ -302,25 +302,6 @@
                         .collect( Collectors.toCollection( ReferenceList::new ) );
     }
 
-    /**
-     * Filter a Reference List for a given user
-     * 
-     * @param listResources
-     *            The list to filter
-     * @param strResourceType
-     *            The resource type
-     * @param strPermission
-     *            The permission to check
-     * @param user
-     *            The user
-     * @return The filtered collection
-     * @deprecated use getAuthorizedReferenceList( ReferenceList, String, String, User )
-     */
-    @Deprecated
-    public static ReferenceList getAuthorizedReferenceList( ReferenceList listResources, String strResourceType, String strPermission, AdminUser user )
-    {
-        return getAuthorizedReferenceList( listResources, strResourceType, strPermission, (User) user );
-    }
 
     /**
      * Filter a collection of RBACAction for a given user
@@ -353,24 +334,4 @@
                 || permissions.contains( RBAC.WILDCARD_PERMISSIONS_KEY ) ).collect( Collectors.toList( ) );
     }
 
-    /**
-     * Filter a collection of RBACAction for a given user
-     * 
-     * @param <E>
-     *            The RBAC resource
-     * @param collection
-     *            The collection to filter
-     * @param resource
-     *            The resource
-     * @param user
-     *            The user
-     * @return The filtered collection
-     * @deprecated use getAuthorizedActionsCollection( Collection, RBACResource, User )
-     */
-    @Deprecated
-    public static <E extends RBACAction> Collection<E> getAuthorizedActionsCollection( Collection<E> collection, RBACResource resource, AdminUser user )
-    {
-        return getAuthorizedActionsCollection( collection, resource, (User) user );
-    }
-
 }
Index: src/java/fr/paris/lutece/portal/service/spring/SpringContextService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/fr/paris/lutece/portal/service/spring/SpringContextService.java b/src/java/fr/paris/lutece/portal/service/spring/SpringContextService.java
--- a/src/java/fr/paris/lutece/portal/service/spring/SpringContextService.java	(revision 0075118c98bfd8c26c48da57f24861137cf0e7ed)
+++ b/src/java/fr/paris/lutece/portal/service/spring/SpringContextService.java	(revision 0bbd5378cb7f625320d3269db8b90210d2224a27)
@@ -96,22 +96,6 @@
         return (T) _context.getBean( strName );
     }
 
-    /**
-     * Return an instance of the given bean name loaded by the a Spring BeanFactory. The bean is retreived from a plugin context defined in the
-     * WEB-INF/conf/plugins/[plugin_name]_context.xml.
-     * 
-     * @param strPluginName
-     *            The Plugin's name
-     * @param strName
-     *            The bean's name
-     * @return The instance of the bean
-     * @deprecated use {@link #getBean(String)} instead
-     */
-    @Deprecated
-    public static Object getPluginBean( String strPluginName, String strName )
-    {
-        return _context.getBean( strName );
-    }
 
     /**
      * Indicates if a bean, referenced by its name, is part of an enabled plugin.
Index: src/java/fr/paris/lutece/portal/service/workflow/WorkflowService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/fr/paris/lutece/portal/service/workflow/WorkflowService.java b/src/java/fr/paris/lutece/portal/service/workflow/WorkflowService.java
--- a/src/java/fr/paris/lutece/portal/service/workflow/WorkflowService.java	(revision 0075118c98bfd8c26c48da57f24861137cf0e7ed)
+++ b/src/java/fr/paris/lutece/portal/service/workflow/WorkflowService.java	(revision 0bbd5378cb7f625320d3269db8b90210d2224a27)
@@ -145,25 +145,6 @@
         return null;
     }
 
-    /**
-     * returns a list of actions possible for a given document based on the status of the document in the workflow and the user role
-     * 
-     * @param nIdResource
-     *            the document id
-     * @param strResourceType
-     *            the document type
-     * @param user
-     *            the adminUser
-     * @param nIdWorkflow
-     *            the workflow id
-     * @return a list of Action
-     * @deprecated use getActions( int, String, int, User )
-     */
-    @Deprecated
-    public Collection<Action> getActions( int nIdResource, String strResourceType, int nIdWorkflow, AdminUser user )
-    {
-        return getActions( nIdResource, strResourceType, nIdWorkflow, (User) user );
-    }
 
     /**
      * returns a list of actions possible for a given document based on the status of the document in the workflow and the user role
@@ -193,28 +174,6 @@
         return null;
     }
 
-    /**
-     * returns a list of actions possible for a given document based on the status of the document in the workflow and the user role
-     * 
-     * @param listIdResource
-     *            the list of resource id
-     * @param strResourceType
-     *            the document type
-     * @param nIdExternalParentId
-     *            the external parent identifier
-     * @param nIdWorkflow
-     *            the workflow id
-     * @param user
-     *            the User
-     * @return a list of Action
-     * @deprecated getActions( List, String, Integer, int, User )
-     */
-    @Deprecated
-    public Map<Integer, List<Action>> getActions( List<Integer> listIdResource, String strResourceType, Integer nIdExternalParentId, int nIdWorkflow,
-            AdminUser user )
-    {
-        return getActions( listIdResource, strResourceType, nIdExternalParentId, nIdWorkflow, (User) user );
-    }
 
     /**
      * return true if a form is associate to the action
@@ -230,32 +189,6 @@
         return isAvailable( ) && _service.isDisplayTasksForm( nIdAction, locale );
     }
 
-    /**
-     * Proceed action given in parameter
-     * 
-     * @param nIdResource
-     *            the resource id
-     * @param strResourceType
-     *            the resource type
-     * @param nIdAction
-     *            the action id
-     * @param nExternalParentId
-     *            the external parent id
-     * @param request
-     *            the request
-     * @param locale
-     *            locale
-     * @param bIsAutomatic
-     *            Is automatic
-     * @deprecated use doProcessAction( int, String, int, Integer, HttpServletRequest, Locale, boolean, User )
-     */
-    @Deprecated
-    public void doProcessAction( int nIdResource, String strResourceType, int nIdAction, Integer nExternalParentId, HttpServletRequest request, Locale locale,
-            boolean bIsAutomatic )
-    {
-        doProcessAction( nIdResource, strResourceType, nIdAction, nExternalParentId, request, locale, bIsAutomatic, null );
-    }
-
     /**
      * Proceed action given in parameter
      * 
@@ -299,27 +232,6 @@
         }
     }
 
-    /**
-     * returns the actions history performed on a resource
-     * 
-     * @param nIdResource
-     *            the resource id
-     * @param strResourceType
-     *            the resource type
-     * @param request
-     *            the request
-     * @param nIdWorkflow
-     *            the workflow id
-     * @param locale
-     *            the locale
-     * @return the history of actions performed on a resource
-     * @deprecated use getDisplayDocumentHistory( int, String, int, HttpServletRequest, Locale, User )
-     */
-    @Deprecated
-    public String getDisplayDocumentHistory( int nIdResource, String strResourceType, int nIdWorkflow, HttpServletRequest request, Locale locale )
-    {
-        return getDisplayDocumentHistory( nIdResource, strResourceType, nIdWorkflow, request, locale, null );
-    }
 
     /**
      * returns the actions history performed on a resource
@@ -343,33 +255,6 @@
         return isAvailable( ) ? _provider.getDisplayDocumentHistory( nIdResource, strResourceType, nIdWorkflow, request, locale, user ) : null;
     }
 
-    /**
-     * returns the actions history performed on a resource
-     * 
-     * @param nIdResource
-     *            the resource id
-     * @param strResourceType
-     *            the resource type
-     * @param request
-     *            the request
-     * @param nIdWorkflow
-     *            the workflow id
-     * @param locale
-     *            the locale
-     * @param model
-     *            The model to add to the default model
-     * @param strTemplate
-     *            The template
-     * @return the history of actions performed on a resource
-     * @deprecated use getDisplayDocumentHistory( int, String, int, HttpServletRequest, Locale, Map, String, User )
-     */
-    @Deprecated
-    public String getDisplayDocumentHistory( int nIdResource, String strResourceType, int nIdWorkflow, HttpServletRequest request, Locale locale,
-            Map<String, Object> model, String strTemplate )
-    {
-        return getDisplayDocumentHistory( nIdResource, strResourceType, nIdWorkflow, request, locale, model, strTemplate, null );
-    }
-
     /**
      * returns the actions history performed on a resource
      * 
@@ -409,31 +294,6 @@
         }
     }
 
-    /**
-     * Perform the information on the various tasks associated with the given action specified in parameter
-     * 
-     * @param nIdResource
-     *            the resource id
-     * @param strResourceType
-     *            the resource type
-     * @param nExternalParentId
-     *            the external parent id
-     * @param request
-     *            the request
-     * @param nIdAction
-     *            the action id
-     * @param locale
-     *            the locale
-     * @return null if there is no error in the task form else return the error message url
-     * @deprecated use doSaveTasksForm( int, String, int, Integer, HttpServletRequest, Locale, User )
-     */
-    @Deprecated
-    public String doSaveTasksForm( int nIdResource, String strResourceType, int nIdAction, Integer nExternalParentId, HttpServletRequest request,
-            Locale locale )
-    {
-        return doSaveTasksForm( nIdResource, strResourceType, nIdAction, nExternalParentId, request, locale, null );
-    }
-
     /**
      * Perform the information on the various tasks associated with the given action specified in parameter
      * 
@@ -569,30 +429,6 @@
         }
     }
 
-    /**
-     * returns the tasks form
-     * 
-     * @param nIdResource
-     *            the document id
-     * @param strResourceType
-     *            the document type
-     * @param request
-     *            the request
-     * @param nIdAction
-     *            the action id
-     * @param locale
-     *            the locale
-     * @return the tasks form associated to the action
-     *
-     * @deprecated use getDisplayTasksForm( int, String, int, HttpServletRequest, Locale, User )
-     */
-    @Deprecated
-    public String getDisplayTasksForm( int nIdResource, String strResourceType, int nIdAction, HttpServletRequest request, Locale locale )
-    {
-        return getDisplayTasksForm( nIdResource, strResourceType, nIdAction, request, locale, null );
-
-    }
-
     /**
      * returns the tasks form
      * 
@@ -634,26 +470,6 @@
         return isAvailable( ) && _provider.isAuthorized( nIdResource, strResourceType, nIdWorkflow, user );
     }
 
-    /**
-     * Check that a given user is allowed to view a resource depending the state of the resource
-     * 
-     * @param nIdResource
-     *            the document id
-     * @param strResourceType
-     *            the document type
-     * @param user
-     *            the User
-     * @param nIdWorkflow
-     *            the workflow id
-     * @return a list of Action
-     * @deprecated use isAuthorized( int, String, int, User )
-     */
-    @Deprecated
-    public boolean isAuthorized( int nIdResource, String strResourceType, int nIdWorkflow, AdminUser user )
-    {
-        return isAuthorized( nIdResource, strResourceType, nIdWorkflow, (User) user );
-    }
-
     /**
      * Get all authorized resource Id
      * 
@@ -674,29 +490,6 @@
         return isAvailable( ) ? _provider.getAuthorizedResourceList( strResourceType, nIdWorkflow, nIdWorkflowState, nExternalParentId, user ) : null;
     }
 
-    /**
-     * Get all authorized resource Id
-     * 
-     * @param strResourceType
-     *            the resource type
-     * @param nIdWorkflow
-     *            the workflow id
-     * @param nIdWorkflowState
-     *            The workflow state id or -1 for all workflow states
-     * @param nExternalParentId
-     *            The external parent id
-     * @param user
-     *            the User
-     * @return a list resource id
-     * @deprecated use getAuthorizedResourceList( String, int, int, Integer, User )
-     */
-    @Deprecated
-    public List<Integer> getAuthorizedResourceList( String strResourceType, int nIdWorkflow, int nIdWorkflowState, Integer nExternalParentId, AdminUser user )
-    {
-        return getAuthorizedResourceList( strResourceType, nIdWorkflow, nIdWorkflowState, nExternalParentId, (User) user );
-
-    }
-
     /**
      * Get all authorized resource Id by list of state
      * 
@@ -718,29 +511,6 @@
         return isAvailable( ) ? _provider.getAuthorizedResourceList( strResourceType, nIdWorkflow, lListIdWorkflowState, nExternalParentId, user ) : null;
     }
 
-    /**
-     * Get all authorized resource Id by list of state
-     * 
-     * @param strResourceType
-     *            the resource type
-     * @param nIdWorkflow
-     *            the workflow id
-     * @param lListIdWorkflowState
-     *            The workflow state <b>id or null</b> for all workflow states
-     * @param nExternalParentId
-     *            the externbal parent identifier
-     * @param user
-     *            the User
-     * @return a list resource id
-     * @deprecated use getAuthorizedResourceList( String, int, List, Integer, User )
-     */
-    @Deprecated
-    public List<Integer> getAuthorizedResourceList( String strResourceType, int nIdWorkflow, List<Integer> lListIdWorkflowState, Integer nExternalParentId,
-            AdminUser user )
-    {
-        return getAuthorizedResourceList( strResourceType, nIdWorkflow, lListIdWorkflowState, nExternalParentId, (User) user );
-    }
-
     /**
      * return a reference list which contains a list enabled workflow
      * 
@@ -755,22 +525,6 @@
         return isAvailable( ) ? _provider.getWorkflowsEnabled( user, locale ) : null;
     }
 
-    /**
-     * return a reference list which contains a list enabled workflow
-     * 
-     * @param user
-     *            the User
-     * @param locale
-     *            the locale
-     * @return a reference list which contains a list enabled workflow
-     * @deprecated use getWorkflowsEnabled( User, Locale )
-     */
-    @Deprecated
-    public ReferenceList getWorkflowsEnabled( AdminUser user, Locale locale )
-    {
-        return getWorkflowsEnabled( (User) user, locale );
-    }
-
     /**
      * returns all state of a given workflow
      * 
@@ -792,22 +546,6 @@
         return null;
     }
 
-    /**
-     * returns all state of a given workflow
-     * 
-     * @param user
-     *            the adminUser
-     * @param nIdWorkflow
-     *            the workflow id
-     * @return the state of a given document
-     * @deprecated use getAllStateByWorkflow( int, User )
-     */
-    @Deprecated
-    public Collection<State> getAllStateByWorkflow( int nIdWorkflow, AdminUser user )
-    {
-        return getAllStateByWorkflow( nIdWorkflow, (User) user );
-    }
-
     /**
      * returns the state of a given document of the document in the workflow and the user role
      * 
@@ -845,25 +583,6 @@
         return null;
     }
 
-    /**
-     * Execute action automatic
-     * 
-     * @param nIdResource
-     *            the document id
-     * @param strResourceType
-     *            the document type
-     * @param nIdWorkflow
-     *            the workflow id
-     * @param nExternalParentId
-     *            the external parent id
-     * @deprecated use executeActionAutomatic( int, String, int, Integer, User )
-     */
-    @Deprecated
-    public void executeActionAutomatic( int nIdResource, String strResourceType, int nIdWorkflow, Integer nExternalParentId )
-    {
-        executeActionAutomatic( nIdResource, strResourceType, nIdWorkflow, nExternalParentId, null );
-    }
-
     /**
      * Execute action automatic
      * 
@@ -932,31 +651,6 @@
         return _provider.getAuthorizedActions( listActions, user );
     }
 
-    /**
-     * Check if the action can be proceed for the given resource
-     * 
-     * @param nIdResource
-     *            the id resource
-     * @param strResourceType
-     *            the resource type
-     * @param nIdAction
-     *            the id action
-     * @param nExternalParentId
-     *            the external parent id
-     * @param request
-     *            the HTTP request
-     * @param bIsAutomatic
-     *            is automatic action
-     * @return true if the action can proceed, false otherwise
-     * @deprecated use canProcessAction( int, String, int, Integer, HttpServletRequest, User )
-     */
-    @Deprecated
-    public boolean canProcessAction( int nIdResource, String strResourceType, int nIdAction, Integer nExternalParentId, HttpServletRequest request,
-            boolean bIsAutomatic )
-    {
-        return canProcessAction( nIdResource, strResourceType, nIdAction, nExternalParentId, request, bIsAutomatic, null );
-    }
-
     /**
      * Check if the action can be proceed for the given resource
      * 
@@ -992,28 +686,6 @@
         return false;
     }
 
-    /**
-     * Proceed automatic reflexive actions of state given in parameter. This method should be called anytime a service changed the state of a resource without
-     * proceeding a workflow action
-     * 
-     * @param nIdResource
-     *            the resource id
-     * @param strResourceType
-     *            the resource type
-     * @param nIdState
-     *            the state of the resource id
-     * @param nIdExternalParent
-     *            the external parent id*
-     * @param locale
-     *            locale
-     * @deprecated use doProcessAutomaticReflexiveActions( int, String, int, Integer, Locale, User )
-     */
-    @Deprecated
-    public void doProcessAutomaticReflexiveActions( int nIdResource, String strResourceType, int nIdState, Integer nIdExternalParent, Locale locale )
-    {
-        doProcessAutomaticReflexiveActions( nIdResource, strResourceType, nIdState, nIdExternalParent, locale, null );
-    }
-
     /**
      * Proceed automatic reflexive actions of state given in parameter. This method should be called anytime a service changed the state of a resource without
      * proceeding a workflow action
Index: src/java/fr/paris/lutece/portal/service/workgroup/AdminWorkgroupService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/fr/paris/lutece/portal/service/workgroup/AdminWorkgroupService.java b/src/java/fr/paris/lutece/portal/service/workgroup/AdminWorkgroupService.java
--- a/src/java/fr/paris/lutece/portal/service/workgroup/AdminWorkgroupService.java	(revision 0075118c98bfd8c26c48da57f24861137cf0e7ed)
+++ b/src/java/fr/paris/lutece/portal/service/workgroup/AdminWorkgroupService.java	(revision 0bbd5378cb7f625320d3269db8b90210d2224a27)
@@ -79,22 +79,6 @@
         return true;
     }
 
-    /**
-     * Check if a resource should be visible to the user according its workgroup
-     * 
-     * @param resource
-     *            The resource to check
-     * @param user
-     *            The current user
-     * @return true if authorized, otherwise false
-     * @deprecated use isAuthorized( AdminWorkgroupResource, User )
-     */
-    @Deprecated
-    public static boolean isAuthorized( AdminWorkgroupResource resource, AdminUser user )
-    {
-        return isAuthorized( resource, (User) user );
-    }
-
     /**
      * Filter a collection of resources for a given user
      *
Index: src/test/java/fr/paris/lutece/portal/business/AllTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/fr/paris/lutece/portal/business/AllTests.java b/src/test/java/fr/paris/lutece/portal/business/AllTests.java
--- a/src/test/java/fr/paris/lutece/portal/business/AllTests.java	(revision 0075118c98bfd8c26c48da57f24861137cf0e7ed)
+++ b/src/test/java/fr/paris/lutece/portal/business/AllTests.java	(revision 0bbd5378cb7f625320d3269db8b90210d2224a27)
@@ -36,7 +36,6 @@
 import fr.paris.lutece.portal.business.portalcomponent.PortalComponentTest;
 import fr.paris.lutece.portal.business.portlet.AliasPortletTest;
 import fr.paris.lutece.portal.business.portlet.PortletTypeTest;
-import fr.paris.lutece.portal.business.rbac.AdminRoleTest;
 import fr.paris.lutece.portal.business.rbac.RBACTest;
 import fr.paris.lutece.portal.business.right.FeatureGroupTest;
 import fr.paris.lutece.portal.business.right.LevelTest;
@@ -46,6 +45,7 @@
 import fr.paris.lutece.portal.business.style.PageTemplateTest;
 import fr.paris.lutece.portal.business.style.StyleTest;
 import fr.paris.lutece.portal.business.stylesheet.StyleSheetTest;
+import fr.paris.lutece.portal.business.user.AdminUser;
 import fr.paris.lutece.portal.business.user.AdminUserTest;
 import fr.paris.lutece.portal.business.workgroup.AdminWorkgroupTest;
 
@@ -71,7 +71,7 @@
         suite.addTest( new TestSuite( PortalComponentTest.class ) );
         suite.addTest( new TestSuite( AliasPortletTest.class ) );
         suite.addTest( new TestSuite( PortletTypeTest.class ) );
-        suite.addTest( new TestSuite( AdminRoleTest.class ) );
+        suite.addTest( new TestSuite( AdminUser.class ) );
         suite.addTest( new TestSuite( RBACTest.class ) );
         suite.addTest( new TestSuite( FeatureGroupTest.class ) );
         suite.addTest( new TestSuite( RightTest.class ) );
Index: src/test/java/fr/paris/lutece/portal/business/rbac/AdminRoleTest.java
===================================================================
diff --git a/src/test/java/fr/paris/lutece/portal/business/rbac/AdminRoleTest.java b/src/test/java/fr/paris/lutece/portal/business/rbac/AdminRoleTest.java
deleted file mode 100644
--- a/src/test/java/fr/paris/lutece/portal/business/rbac/AdminRoleTest.java	(revision 0075118c98bfd8c26c48da57f24861137cf0e7ed)
+++ /dev/null	(revision 0075118c98bfd8c26c48da57f24861137cf0e7ed)
@@ -1,85 +0,0 @@
-/*
- * Copyright (c) 2002-2022, City of Paris
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *  1. Redistributions of source code must retain the above copyright notice
- *     and the following disclaimer.
- *
- *  2. Redistributions in binary form must reproduce the above copyright notice
- *     and the following disclaimer in the documentation and/or other materials
- *     provided with the distribution.
- *
- *  3. Neither the name of 'Mairie de Paris' nor 'Lutece' nor the names of its
- *     contributors may be used to endorse or promote products derived from
- *     this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- *
- * License 1.0
- */
-package fr.paris.lutece.portal.business.rbac;
-
-import fr.paris.lutece.test.LuteceTestCase;
-
-import java.util.Collection;
-
-public class AdminRoleTest extends LuteceTestCase
-{
-    private final static String ROLEKEY1 = "RoleKey1";
-    private final static String ROLEKEY2 = "RoleKey2";
-    private final static String ROLEDESCRIPTION1 = "RoleDescription 1";
-    private final static String ROLEDESCRIPTION2 = "RoleDescription 2";
-
-    public void testBusiness( )
-    {
-        // Initialize an object
-        RBACRole adminRole = new RBACRole( );
-        adminRole.setKey( ROLEKEY1 );
-        adminRole.setDescription( ROLEDESCRIPTION1 );
-
-        // Create test
-        RBACRoleHome.create( adminRole );
-
-        RBACRole adminRoleStored = RBACRoleHome.findByPrimaryKey( adminRole.getKey( ) );
-        assertEquals( adminRoleStored.getKey( ), adminRole.getKey( ) );
-        assertEquals( adminRoleStored.getDescription( ), adminRole.getDescription( ) );
-
-        // Update test
-        adminRole.setKey( ROLEKEY2 );
-        adminRole.setDescription( ROLEDESCRIPTION2 );
-
-        RBACRoleHome.update( adminRoleStored.getKey( ), adminRole );
-        adminRoleStored = RBACRoleHome.findByPrimaryKey( adminRole.getKey( ) );
-        assertEquals( adminRoleStored.getKey( ), adminRole.getKey( ) );
-        assertEquals( adminRoleStored.getDescription( ), adminRole.getDescription( ) );
-
-        // list test
-        Collection list = RBACRoleHome.findAll( );
-        assertTrue( list.size( ) > 0 );
-
-        // check exist Test
-        boolean bCheck = RBACRoleHome.checkExistRole( ROLEKEY2 );
-        assertTrue( bCheck );
-        bCheck = RBACRoleHome.checkExistRole( ROLEKEY1 );
-        assertFalse( bCheck );
-
-        // Delete test
-        RBACRoleHome.remove( adminRole.getKey( ) );
-        adminRoleStored = RBACRoleHome.findByPrimaryKey( adminRole.getKey( ) );
-        assertNull( adminRoleStored );
-    }
-}
Index: src/test/java/fr/paris/lutece/portal/web/admin/AdminPageJspBeanTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/fr/paris/lutece/portal/web/admin/AdminPageJspBeanTest.java b/src/test/java/fr/paris/lutece/portal/web/admin/AdminPageJspBeanTest.java
--- a/src/test/java/fr/paris/lutece/portal/web/admin/AdminPageJspBeanTest.java	(revision 0075118c98bfd8c26c48da57f24861137cf0e7ed)
+++ b/src/test/java/fr/paris/lutece/portal/web/admin/AdminPageJspBeanTest.java	(revision 0bbd5378cb7f625320d3269db8b90210d2224a27)
@@ -152,7 +152,7 @@
      */
     private void removeUser( AdminUser user )
     {
-        Map<String, UserRole> roles = user.getRoles( );
+        Map<String, UserRole> roles = user.getUserRoles( );
         for ( String roleKey : roles.keySet( ) )
         {
             RBACHome.removeForRoleKey( roleKey );
Index: src/test/java/fr/paris/lutece/portal/web/admin/AdminPagePortletJspBeanTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/fr/paris/lutece/portal/web/admin/AdminPagePortletJspBeanTest.java b/src/test/java/fr/paris/lutece/portal/web/admin/AdminPagePortletJspBeanTest.java
--- a/src/test/java/fr/paris/lutece/portal/web/admin/AdminPagePortletJspBeanTest.java	(revision 0075118c98bfd8c26c48da57f24861137cf0e7ed)
+++ b/src/test/java/fr/paris/lutece/portal/web/admin/AdminPagePortletJspBeanTest.java	(revision 0bbd5378cb7f625320d3269db8b90210d2224a27)
@@ -1056,7 +1056,7 @@
      */
     private void removeUser( AdminUser user )
     {
-        Map<String, UserRole> roles = user.getRoles( );
+        Map<String, UserRole> roles = user.getUserRoles( );
         for ( String roleKey : roles.keySet( ) )
         {
             RBACHome.removeForRoleKey( roleKey );
